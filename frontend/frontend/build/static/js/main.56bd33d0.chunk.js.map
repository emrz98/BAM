{"version":3,"sources":["API.js","container/CustomerDetails.js","components/CustomerItem.js","container/CustomerList.js","container/Login.js","App.js","reportWebVitals.js","index.js"],"names":["Database","user","password","action","data","axios","post","url","then","response","catch","e","alert","token","name","email","dateOfBirthday","headers","Authorization","window","location","reload","customerId","status","undefined","get","CustomerDetails","props","statusList","initStatus","currentHistory","length","sort","a","b","Date","date","useState","setStatus","Object","keys","currentDetail","onSubmit","onUpdateStatus","value","onChange","event","target","type","map","history","console","log","CustomerItem","className","onClick","getCustomerHistory","customer","CustomerList","customers","setCustomers","setCurrentHistory","setCurrentDetail","setName","setEmail","setDateOfBirthday","useEffect","getAllCustomerNames","allCustomers","getCustomers","id","customerDetails","preventDefault","details","updateCustomerStatus","createCustomer","sessionStorage","removeItem","deleteToken","Login","setUser","setPassword","handleAuthentication","setItem","handleToken","authenticate","App","getItem","setToken","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56bd33d0.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nclass Database{\r\n    static url = \"http://127.0.0.1:8000/api/\";\r\n\r\n    static async authenticate(user, password, action){\r\n        const data = {\"username\": user, \"password\": password}\r\n        const response = await axios.post(Database.url + \"login/\", data)\r\n                                    .then(response => response.data)\r\n                                    .catch(e => alert(e));\r\n        if(response === 400){\r\n            alert(\"Invalid credentials\");\r\n        }\r\n        else{\r\n            action(response.token);\r\n        }   \r\n    }\r\n\r\n    static async createCustomer(name, email, dateOfBirthday, token){\r\n        const data = {\"name\": name, \"date_of_birth\": dateOfBirthday, \"email\":email};\r\n        const response = await axios.post(Database.url + \"customer/\", \r\n                                          data, \r\n                                          {headers: { Authorization: `Token ${token}` }})\r\n                                          .then(response => response.data)\r\n                                          .catch(e => alert(e));\r\n        if(response === 400){\r\n            alert(\"Creacion incorrecta\");\r\n        }\r\n        else{\r\n            alert(\"Cliente creado\");\r\n            window.location.reload();\r\n        }   \r\n    }\r\n\r\n    static async updateCustomerStatus(customerId, status, token){\r\n        const data = {\"status\": status};\r\n        const response = await axios.post(Database.url + \"customer/\" + customerId + \"/history/\", \r\n                                          data, \r\n                                          {headers: { Authorization: `Token ${token}` }})\r\n                                            .then(response => response.data)\r\n                                            .catch(e => alert(e));\r\n        if(response === undefined){\r\n            alert(\"Para actualizar el estatus debes escoger uno diferente\");\r\n        }\r\n        else{\r\n            alert(\"Status Actualizado\");\r\n            window.location.reload();\r\n        }   \r\n    }\r\n\r\n    static async getAllCustomerNames(token, action){\r\n        const response = await axios.get(Database.url + \"customer/\",  {headers: { Authorization: `Token ${token}` }})\r\n                                    .then(response => response.data)\r\n                                    .catch(e => alert(e));\r\n        \r\n        return response;\r\n    }\r\n\r\n    static async getCustomerHistory(customerId, token){\r\n        const response = await axios.get(Database.url + \"customer/\" + customerId + \"/history/\", \r\n                                        {headers: { Authorization: `Token ${token}` }})\r\n                                    .then(response => response.data)\r\n                                    .catch(e => alert(e));\r\n        \r\n        return response;\r\n    }\r\n}\r\n\r\nexport default Database;","import React, { useState } from 'react';\r\nimport Database from '../API';\r\nfunction CustomerDetails(props){\r\n    // Ordenar los estatus por fecha\r\n    const lastStatus = (statusList) => {\r\n        statusList.sort(function(a,b){\r\n            return new Date(b.date) - new Date(a.date);\r\n          });\r\n        const statusListSize = statusList.length - 1\r\n        return statusList[statusListSize];\r\n    }\r\n    const initStatus = props.currentHistory.length>0  ? lastStatus(props.currentHistory)[\"status\"] : null;\r\n    const [status, setStatus] = useState(initStatus);\r\n    const handleStatus = (event) => {\r\n        setStatus(event.target.value);\r\n    }\r\n\r\n    if(Object.keys(props.currentDetail).length > 0){\r\n        return(\r\n            <>\r\n                <div>\r\n                    <h3>Detalles</h3>\r\n                        <p>Nombre: {props.currentDetail[\"name\"]} </p>\r\n                        <p>Fecha de nacimiento: {props.currentDetail[\"date_of_birth\"]}</p> \r\n                        <p>Email: {props.currentDetail[\"email\"]}</p>\r\n                </div>\r\n                <div>\r\n                    <h3>Historia</h3>\r\n                    <div>\r\n                        <form onSubmit={e => props.onUpdateStatus(e, props.currentDetail[\"id\"], status)}>\r\n                            <select value={status === null ? initStatus : status} onChange={handleStatus}>\r\n                                <option value=\"Nuevo\">Nuevo</option>\r\n                                <option value=\"En seguimiento\">En seguimiento</option>\r\n                                <option value=\"Atendido\">Atendido</option>\r\n                                <option value=\"Rechazado\">Rechazado</option>\r\n                            </select>\r\n                            <input type=\"submit\" value=\"Actualizar status\"/>\r\n                        </form>\r\n                    </div>\r\n                    {props.currentHistory.map((history) => {\r\n                        console.log(history);\r\n                        return(\r\n                            <p>{history[\"status\"]} {history[\"check_in_time\"]}</p>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n    else{\r\n        return(null);\r\n    }\r\n    \r\n}\r\n\r\nexport default CustomerDetails;","import react from 'react';\r\nimport './CustomerItem.css';\r\nfunction CustomerItem(props){\r\n    return(\r\n        <p className=\"customer-item item\" onClick={e => props.getCustomerHistory(e, props.customer[\"id\"], props.customer)}>\r\n            {props.customer[\"name\"]}\r\n        </p>\r\n    );\r\n}\r\nexport default CustomerItem;","import React, { useEffect, useState } from 'react';\r\nimport CustomerDetails from './CustomerDetails';\r\nimport CustomerItem from '../components/CustomerItem';\r\nimport Database from '../API';\r\nimport './CustomerList.css';\r\n\r\nfunction CustomerList(props){\r\n    const [customers, setCustomers] = useState([]);\r\n    const [currentHistory, setCurrentHistory] = useState([]);\r\n    const [currentDetail, setCurrentDetail] = useState({});\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [dateOfBirthday, setDateOfBirthday] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const getCustomers = async()=>{\r\n            const allCustomers = await Database.getAllCustomerNames(props.token);\r\n            setCustomers(allCustomers);\r\n        }\r\n        getCustomers();\r\n    },[]);\r\n\r\n    const closeSession = () => {\r\n        sessionStorage.removeItem('token');\r\n        props.deleteToken();\r\n    }\r\n\r\n    const onSubmitNewCustomer = (event)=>{\r\n        event.preventDefault();\r\n        Database.createCustomer(name, email, dateOfBirthday, props.token);\r\n    }\r\n\r\n    const nameOnChange = (event) =>{\r\n        setName(event.target.value);\r\n    }\r\n\r\n    const emailOnChange = (event) =>{\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    const dateOfBirthdayOnChange = (event) => {\r\n        setDateOfBirthday(event.target.value);\r\n    }\r\n\r\n    const getCustomerHistory = async (event, id, customerDetails) => {\r\n        event.preventDefault();\r\n        const details = await Database.getCustomerHistory(id, props.token);\r\n        setCurrentHistory(details);\r\n        setCurrentDetail(customerDetails)\r\n    }\r\n\r\n    const onUpdateStatus = async (event, customerId, status) => {\r\n        event.preventDefault();\r\n        Database.updateCustomerStatus(customerId, status, props.token);\r\n    }\r\n\r\n    return(\r\n        <div className=\"main-page\">\r\n            <div className=\"customer-list-container\">\r\n                <div className=\"new-customer-form\">\r\n                    <form onSubmit={onSubmitNewCustomer}>\r\n                        <h4>Agregar nuevo cliente</h4>\r\n                        <p>Nombre</p>\r\n                        <input type=\"text\" onChange={nameOnChange}/>\r\n                        <p>Fecha de nacimiento</p>\r\n                        <input type=\"date\" onChange={dateOfBirthdayOnChange}/>\r\n                        <p>Email</p>\r\n                        <input type=\"email\" onChange={emailOnChange}/>\r\n                        <input type=\"submit\" value=\"Save\"/>\r\n                    </form>\r\n                </div>\r\n                <div className=\"customer-list-items\">\r\n                    <h4  className=\"title-customer-list-items\">Lista de clientes</h4>\r\n                    {customers.map((customer)=> {\r\n                        return(\r\n                            <CustomerItem \r\n                                customer={customer} \r\n                                getCustomerHistory = {getCustomerHistory}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n                <button onClick={closeSession}>Log out</button>\r\n            </div>\r\n            <div>\r\n                <CustomerDetails \r\n                    currentHistory = {currentHistory}\r\n                    currentDetail = {currentDetail}\r\n                    onUpdateStatus = {onUpdateStatus}\r\n                />\r\n            </div>\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default CustomerList;","import react from 'react';\r\nimport { useState } from 'react';\r\nimport './Login.css';\r\nimport Database from '../API';\r\n\r\nfunction Login(props){\r\n    const [user, setUser] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const onChangeUser = (event)=> {\r\n        setUser(event.target.value);\r\n    }\r\n    \r\n    const onChangePassword = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n    \r\n    const handleAuthentication = (token) => {\r\n        sessionStorage.setItem('token', token);\r\n        props.handleToken(token);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        Database.authenticate(user, password, handleAuthentication);\r\n    }\r\n    return(\r\n        <div className = \"login\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"item-login\">\r\n                    <h2>Log in</h2>\r\n                </div>\r\n                <div className=\"item-login\">\r\n                    <p>User</p>\r\n                    <input type=\"text\" value = {user} onChange = {onChangeUser}/>\r\n                </div>\r\n                <div className=\"item-login\">\r\n                    <p>Password</p>\r\n                    <input type=\"password\" value = {password} onChange = {onChangePassword}/>\r\n                </div>\r\n                <div className=\"item-login\">\r\n                    <input type=\"submit\" value={\"Login\"}/>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Login;","import './container/CustomerList';\nimport Login from './container/Login';\nimport CustomerList from './container/CustomerList';\nimport './App.css'\nimport { useState } from 'react';\nfunction App() {\n  const [token, setToken] = useState(sessionStorage.getItem('token'));\n  const handleToken = (token) => {\n    setToken(token);\n  }\n  const deleteToken = () => {\n    setToken(null);\n  }\n  return (\n    <div>\n      <header className=\"app-header\">\n        <h1>Banco Autofin</h1>\n      </header>\n      <div className=\"content\"> \n        {token === null ? (<Login handleToken={handleToken}/>) : (<CustomerList deleteToken={deleteToken} token={token}/>)}\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}